<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
  xmlns:elasticsearch="http://www.pilato.fr/schema/elasticsearch"
  xsi:schemaLocation="
           http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/batch    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
           http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/jdbc     http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
           http://www.springframework.org/schema/task     http://www.springframework.org/schema/task/spring-task-3.2.xsd
           http://www.springframework.org/schema/util     http://www.springframework.org/schema/util/spring-util-3.2.xsd
           http://www.pilato.fr/schema/elasticsearch      http://www.pilato.fr/schema/elasticsearch/elasticsearch-0.2.xsd
        ">

  <context:property-placeholder
    location="classpath:com/javaetmoi/elasticsearch/musicbrainz/batch/test-es-musicbrainz-batch.properties" />

  <import resource="classpath:com/javaetmoi/elasticsearch/musicbrainz/batch/test-applicationContext-datasource.xml" />
  <import resource="classpath:com/javaetmoi/elasticsearch/musicbrainz/batch/applicationContext-job.xml" />

  <!-- Datasource transaction manager used forbatch processing -->
  <bean id="musicBrainzTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    p:dataSource-ref="musicBrainzDataSource" />

  <!-- Resourceless transaction manager -->
  <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager">
  </bean>


  <!--=== ElasticSearch Configuration === -->

  <elasticsearch:node id="esNode" properties="esProperties" />
  <elasticsearch:client node="esNode" id="esClient" />

  <util:map id="esProperties">
    <entry key="cluster.name" value="elasticsearch-musicbrainz" />
    <entry key="client.transport.sniff" value="false" />
    <entry key="path.home" value="target/es" />
  </util:map>


  <!--=== Spring Batch Configuration === -->

  <!-- In-memory database repository -->
  <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
    <property name="transactionManager" ref="transactionManager" />
  </bean>

  <!-- Helps with testing (autowired, injected in the test instance) -->
  <bean class="org.springframework.batch.test.JobLauncherTestUtils" lazy-init="true" />

  <!-- Starts a job execution -->
  <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    <property name="jobRepository" ref="jobRepository" />
  </bean>

</beans>